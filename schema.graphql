# 에러 처리와 관련된 공통 타입
type MutationResult {
  success: Boolean!
  message: String
}

# Node 인터페이스
interface Node {
  id: ID!
}

# 페이지네이션 정보 타입
type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

# 게시글 타입
type Post implements Node {
  id: ID!
  title: String!
  content: String!
  author: String!
  createdAt: DateTime!
  updatedAt: DateTime
  comments: CommentConnection
}

# 댓글 타입
type Comment implements Node {
  id: ID!
  postId: ID!
  content: String!
  author: String!
  createdAt: DateTime!
  replies: CommentConnection
}

# 게시글 목록의 Edge 타입
type PostEdge {
  node: Post!
  cursor: String!
}

# 댓글 목록의 Edge 타입
type CommentEdge {
  node: Comment!
  cursor: String!
}

# 게시글 목록의 Connection 타입
type PostConnection {
  edges: [PostEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

# 댓글 목록의 Connection 타입
type CommentConnection {
  edges: [CommentEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

# 쿼리 타입
type Query {
  # 게시글 목록 조회 (페이징 처리 포함)
  posts(input: PostQueryInput!): PostConnection
  
  # 게시글 상세 조회
  post(input: PostDetailInput!): Post
  
  # 댓글 목록 조회 (페이징 처리 포함)
  comments(input: CommentQueryInput!): CommentConnection
}

# 게시글 목록 조회 Input
input PostQueryInput {
  first: Int
  after: String
  title: String
  author: String
  sortOrder: SortOrder
}

# 게시글 상세 조회 Input
input PostDetailInput {
  id: ID!
}

# 댓글 목록 조회 Input
input CommentQueryInput {
  postId: ID!
  first: Int
  after: String
}

# 게시글 작성 Input
input CreatePostInput {
  title: String!
  content: String!
  author: String!
  password: String!
}

# 게시글 수정 Input
input UpdatePostInput {
  id: ID!
  title: String
  content: String
  password: String!
}

# 게시글 삭제 Input
input DeletePostInput {
  id: ID!
  password: String!
}

# 댓글 작성 Input
input CreateCommentInput {
  postId: ID!
  content: String!
  author: String!
  parentCommentId: ID
}

# Mutation 타입
type Mutation {
  # 게시글 작성
  createPost(input: CreatePostInput!): MutationResult
  
  # 게시글 수정
  updatePost(input: UpdatePostInput!): MutationResult
  
  # 게시글 삭제
  deletePost(input: DeletePostInput!): MutationResult
  
  # 댓글 작성
  createComment(input: CreateCommentInput!): MutationResult
  
  # 알림 관련 뮤테이션 (실제 알림 보내기는 구현하지 않음)
  notifyKeywordMatch(input: NotifyKeywordMatchInput!): MutationResult
}

# 알림 관련 Input
input NotifyKeywordMatchInput {
  postId: ID!
  content: String!
}

# 정렬 방식 Enum
enum SortOrder {
  ASC
  DESC
}

# 커스텀 스칼라 타입
scalar DateTime
